# This file is part of banias. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/banias/master/COPYRIGHT. No part of banias, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2015 The developers of banias. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/raphaelcohn/banias/master/COPYRIGHT.


core_usesIn configure
banias_report_create()
{
	local reportName="$core_variable_array_element"
	local reportPath="$banias_reportsPath"/"$reportName"
	local reportPandocYamlMetadataFilePath="$reportPath"/"$reportName".yaml
	local outputReportFilePathWithoutExtension="$banias_outputPath"/"$reportName"
	local pandocTemplateFileExtension
	local templateFragmentFileExtension
	local outputReportFileExtension
	local outputReportFilePath
	
	banias_report_resetPandocArguments
	banias_report_configure
	banias_report_setFormatSpecificArguments
	banias_report_markdownToPdfOrLatex
	banias_report_openReportIfPdfAndOnMacOsX
}

banias_report_resetPandocArguments()
{
	if core_variable_array_isSet _banias_report_pandocArguments; then
		core_variable_array_unset _banias_report_pandocArguments
	fi
	
	core_variable_array_initialise _banias_report_pandocArguments
	
	core_variable_array_append _banias_report_pandocArguments \
		--from=markdown \
		--normalize \
		--base-header-level=1
}

banias_report_setFormatSpecificArguments()
{
	case "$banias_format" in
		
		pdf)
			pandocTemplateFileExtension=latex
			templateFragmentFileExtension=tex
			outputReportFileExtension=pdf
		;;
		
		latex)
			pandocTemplateFileExtension=latex
			templateFragmentFileExtension=tex
			outputReportFileExtension=tex
			core_variable_array_append _banias_report_pandocArguments \
				--standalone
		;;
		
		html)
			pandocTemplateFileExtension=html
			templateFragmentFileExtension=html
			outputReportFileExtension=html
		;;
		
		*)
			core_exit_error $core_commandLine_exitCode_SOFTWARE "Unknown banias_format '$banias_format'"
		;;
		
	esac
	
	outputReportFilePath="$outputReportFilePathWithoutExtension".${outputReportFileExtension}
	
	core_variable_array_append _banias_report_pandocArguments \
		-o "$outputReportFilePath"
}

banias_report_configure()
{
	configure_reset banias
	configure_source "$_program_etcPath" banias
	configure_source ~/.banias banias
	configure_source "$banias_reportsPath" banias
	configure_source "$reportPath" banias
	configure_validate banias
}

core_usesIn banias templates
core_dependency_requires '*' pandoc
banias_report_markdownToPdfOrLatex()
{
	core_variable_array_append _banias_report_pandocArguments \
		--to=latex \
		--latex-engine="$banias_latexEngine"
	
	banias_templates_append 
	
	# if core_variable_isTrue "$(configure_getValue banias number_sections)"; then
	# 	core_variable_array_append _banias_report_pandocArguments --number-sections
	# fi
	# core_variable_array_append _banias_report_pandocArguments -V linkcolor:"$(configure_getValue banias link_color)"
	
	_banias_report_markdownToPdf_appendMarkdownFilesWithNewlineSeparators
	
	core_variable_array_append _banias_report_pandocArguments "$reportPandocYamlMetadataFilePath"
	core_variable_array_append _banias_report_pandocArguments "$_banias_reports_temporaryMarkdownFilePath"
	
	# See https://tex.stackexchange.com/questions/139139/adding-headers-and-footers-using-pandoc
	
	_banias_report_markdownToPdf_callback()
	{
		pushd "$reportPath"
		
			pandoc "$@"
			
		popd
	}
	
	core_variable_array_passToFunctionAsArguments _banias_report_pandocArguments _banias_report_markdownToPdf_callback
}

_banias_report_markdownToPdf_onlyIfNotEmpty()
{
	local pandocVariable="$1"
	local key="$2"
	
	local value="$(configure_getValue banias "$key")"
	if [ -n "$value" ]; then
		core_variable_array_append banias_report_pandocArguments -V "$pandocVariable":"$value"
	fi
}

core_dependency_requires '*' find sort cat
_banias_report_markdownToPdf_appendMarkdownFilesWithNewlineSeparators()
{
	printf '' >"$_banias_reports_temporaryMarkdownFilePath"
	
	local fileName
	find "$reportPath" -type f -name '*.md' | sort -d -f | while IFS= read -r fileName
	do
		cat "$fileName" >>"$_banias_reports_temporaryMarkdownFilePath"
		printf '\n' >>"$_banias_reports_temporaryMarkdownFilePath"
	done
}

core_dependency_requires '*' uname
core_dependency_oneOf 'Homebrew' open
banias_report_openReportIfPdfAndOnMacOsX()
{
	if [ "$banias_format" != 'pdf' ]; then
		return 0
	fi
	
	case "$banias_uname" in
		
		Darwin)
			if core_compatibility_whichNoOutput open; then
				open "$outputReportFilePath"
			fi
		;;
	
	esac
}
